---
name: Publish (Internal)

on:
  push:
    branches: ["main"]

jobs:
  publish_packages:
    name: Publish Release
    container: cache-registry.caas.intel.com/cache/library/ubuntu
    runs-on: [self-hosted, gasp]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Install Dependencies
        run: |
          apt-get -y update && \
          apt-get -y install \
            curl \
            gh \
            git \
            jq && \
            curl -L -o toml-0.2.3-x86_64-linux.tar.gz \
              https://github.com/gnprice/toml-cli/releases/download/v0.2.3/toml-0.2.3-x86_64-linux.tar.gz && \
            tar -C /usr/bin --strip-components=1 -xvf \
              toml-0.2.3-x86_64-linux.tar.gz toml-0.2.3-x86_64-linux/toml

      - uses: actions/checkout@v4

      - name: Download and Publish Artifacts
        run: |
          ARTIFACT_RUNID="$(gh api \
            -H 'Accept: application/vnd.github+json' \
            -H 'X-GitHub-Api-Version: 2022-11-28' \
            /repos/intel/tsffs/actions/artifacts \
            | jq -r 'first(.artifacts[] | select(.name | endswith("linux64.ispm"))).workflow_run.id')"
          LINUX64_NAME="$(gh api \
            -H 'Accept: application/vnd.github+json' \
            -H 'X-GitHub-Api-Version: 2022-11-28' \
            /repos/intel/tsffs/actions/artifacts \
            | jq -r 'first(.artifacts[] | select(.name | endswith("linux64.ispm"))).name')"
          WIN64_NAME="$(gh api \
            -H 'Accept: application/vnd.github+json' \
            -H 'X-GitHub-Api-Version: 2022-11-28' \
            /repos/intel/tsffs/actions/artifacts \
            | jq -r 'first(.artifacts[] | select(.name | endswith("win64.ispm"))).name')"

          mkdir -p assets release-assets

          gh run download \
            --repo "intel/tsffs" \
            --dir assets \
            "${ARTIFACT_RUNID}"

          mv assets/*/*.ispm release-assets

          cat <<'EOF' > release-notes
          # Beta Release ${{ github.sha }}

          Beta releases of TSFFS are compatible with versions of SIMICS base (package number 1000) at least the latest version of public SIMICS:
          EOF

          echo '`>='"$(grep -oP 'PUBLIC_SIMICS_PACKAGE_VERSION_1000: "\K(.*)(?=")' .github/workflows/ci.yml)"'`' >> release-notes

          cat <<'EOF' >> release-notes

          This is an automated beta release, published on every push to the repository main branch. 
          You can install the latest release using [ISPM](https://goto.intel.com/simics) by uninstalling your current TSFFS package (if you have one installed) then installing the new package with.

          On Linux:

          ```sh
          EOF

          echo "ispm packages -u 31337-$(toml get -r Cargo.toml workspace.metadata.version)" >> release-notes
          echo "ispm packages -i ${LINUX64_NAME} --trust-insecure-packages" >> release-notes

          cat <<'EOF' >> release-notes
          ```

          Or on Windows:

          ```powershell
          EOF

          echo "ispm.exe packages -u 31337-$(toml get -r Cargo.toml workspace.metadata.version)" >> release-notes
          echo "ispm.exe packages -i ${WIN64_NAME} --trust-insecure-packages" >> release-notes

          cat <<'EOF' >> release-notes
          ```

          Please test the new release and file any non-IC/ITS issues in the [public repository](https://github.com/intel/tsffs).
          IC issues can be filed in this repository, and ITS issues can be emailed to the maintainers.
          EOF

          gh release create \
            "beta/${{ github.sha }}" \
            --repo "${{ github.repository }}" \
            --title "Beta Release ${{ github.sha }}" \
            --notes-file release-notes \
            release-assets/*

  publish_harbor:
    name: Publish Docker image to Harbor
    runs-on: [really-self-hosted]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - run: |
          docker login -u ${{ secrets.HARBOR_USERNAME }} -p ${{ secrets.HARBOR_PAT }} amr-registry.caas.intel.com
          docker build . -t amr-registry.caas.intel.com/tsffs/tsffs
          docker push

          cd .github/action
          docker build . -t amr-registry.caas.intel.com/tsffs/github_action
          docker push
